运行时默认行为 .NET 运行时（无论是 AOT 还是 JIT）都是围绕自动垃圾回收设计的。所有对象分配都会按照固定的数据结构（例如对象头信息、标记位等）进行管理。即使是 AOT 模式，GC 对象扫描、引用追踪和回收逻辑依然深入整个运行时内核。如果要对带有特定关键词或标记的对象禁用 GC，你得在分配阶段加入识别逻辑，并在 GC 扫描过程中“跳过”这些对象，这需要对 GC 内部代码做改动。

标记与管理机制 你需要在对象分配流程中嵌入一个“标记”机制，以便识别哪些对象需要手动释放。这意味着修改现有的对象内存结构和元数据，并确保修改后的对象能够在 GC 扫描中被正确识别（或忽略），而不会在引用链或依赖关系中引发问题。